message("< Start of \"paths.cmake\"")

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(PROJECT_DIRECTORY ${CMAKE_SOURCE_DIR}/..)
set(SOURCE_DIRECTORY ${PROJECT_DIRECTORY}/sources)
set(CMAKE_DIRECTORY ${PROJECT_DIRECTORY}/_cmake)
set(INCLUDE_DIRECTORY ${PROJECT_DIRECTORY}/_include)

set(SYS_LIB_PATH /usr/local/lib)
set(SYS_INC_PATH /usr/include)
set(SYS_PLATFORM_LIB_PATH /usr/lib/x86_64-linux-gnu)

if (${CMAKE_SIZEOF_VOID_P} STREQUAL 4)
    set(OS_BIT "86")
elseif (${CMAKE_SIZEOF_VOID_P} STREQUAL 8)
    set(OS_BIT "64")
endif ()

set(DISTRIB_DIR ${PROJECT_DIRECTORY}/_distrib/bin_${CMAKE_BUILD_TYPE}_${OS_BIT})

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${DISTRIB_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${DISTRIB_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${DISTRIB_DIR}/bin)


# START OUTPUT BLOCK
message("CMAKE_SOURCE_DIR = ${CMAKE_SOURCE_DIR}")

message("PROJECT_DIRECTORY = ${PROJECT_DIRECTORY}")
message("SOURCE_DIRECTORY = ${SOURCE_DIRECTORY}")
message("CMAKE_DIRECTORY = ${CMAKE_DIRECTORY}")
message("INCLUDE_DIRECTORY = ${INCLUDE_DIRECTORY}")

message("CMAKE_ARCHIVE_OUTPUT_DIRECTORY = ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}")
message("CMAKE_LIBRARY_OUTPUT_DIRECTORY = ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
message("CMAKE_RUNTIME_OUTPUT_DIRECTORY = ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")

message("SYS_LIB_PATH = ${SYS_LIB_PATH}")
message("SYS_INC_PATH = ${SYS_INC_PATH}")
message("SYS_PLATFORM_LIB_PATH = ${SYS_PLATFORM_LIB_PATH}")

# END OUTPUT BLOCK

message("< End of file \"paths.cmake\"")
